<template>
 <name>SLC5 Server - i386</name>
 <description>SLC5 Server - i386</description>
 <os>
  <name>SLC-5</name>
  <version>U9</version>
  <arch>i386</arch>
  <install type='iso'>
    <iso>http://linuxsoft.cern.ch/cern/slc59/iso/SLC_5.9_i386_dvd.iso</iso>
  </install>
 </os>
 <packages>
  <package name='cloud-init'/>
  <package name='virt-what'/>
 </packages>
 <commands>
  <command name='grub'>
exec >>/root/customize.log 2>&amp;1
# Make sure the boot sequence is verbose
[ -f /boot/grub/grub.conf ] &amp;&amp; /usr/bin/perl -ni -e "s/ rhgb//;s/ quiet//;print" /boot/grub/grub.conf || :
[ -f /boot/grub2/grub.cfg ] &amp;&amp; /usr/bin/perl -ni -e "s/ rhgb//;s/ quiet//;print" /boot/grub2/grub.cfg || :
  </command>
  <command name='cloud-init-config'>
exec >>/root/customize.log 2>&amp;1
if [ -e /etc/cloud/cloud.cfg ]; then
    /bin/sed -i 's|ec2-user|root|' /etc/cloud/cloud.cfg
    /bin/sed -i 's|^disable_root: 1|disable_root: 0|' /etc/cloud/cloud.cfg
fi
  </command>
  <command name='de-contextualize'>
exec >>/root/customize.log 2>&amp;1

# delete udev rule for vNIC
[ -e /etc/udev/rules.d/70-persistent-net.rules ] &amp;&amp; /bin/rm /etc/udev/rules.d/70-persistent-net.rules
[ -e /lib/udev/write_net_rules ] &amp;&amp; /bin/rm /lib/udev/write_net_rules

# remove references to MAC address, configure dhclient to persistently look for an IP address lease
if [ -e /etc/sysconfig/network-scripts/ifcfg-eth0 ]; then
    /usr/bin/perl -ni -e "print unless /^HWADDR=/" /etc/sysconfig/network-scripts/ifcfg-eth0
    echo PERSISTENT_DHCLIENT=yes >> /etc/sysconfig/network-scripts/ifcfg-eth0
fi

# clean YUM repo's
/usr/bin/yum clean all --enablerepo=*

# remove and lock root password
/usr/bin/passwd -d root || :
/usr/bin/passwd -l root || :

# roll logfiles
/sbin/service rsyslog stop
/usr/sbin/logrotate -f /etc/logrotate.conf
:
  </command>
  <command name='clean-up'>
# remove traces of the installation
#/bin/rm -rf /root/{anaconda-ks.cfg,anaconda-post.log,customize.log,install.log,install.log.syslog}
#/bin/rm -rf /var/log/*.1 /var/log/{yum.log,anaconda.syslog,anaconda.log} /tmp/ks-script-*
  </command>
 </commands>
</template>
